name: Version Management
on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  version-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Check Version Update Required
        id: version-check
        run: |
          # Get current version from version.json
          CURRENT_VERSION=$(jq -r '.version' version.json)
          CURRENT_MILESTONE=$(jq -r '.milestone' version.json)
          
          # Check if this is a milestone PR (feature/ branch with milestone change)
          if [[ "${{ github.head_ref }}" =~ ^feature/v[0-9]+\.[0-9]+\.[0-9]+ ]]; then
            echo "Milestone PR detected"
            # Extract expected version from branch name
            EXPECTED_VERSION=$(echo "${{ github.head_ref }}" | grep -o 'v[0-9]*\.[0-9]*\.[0-9]*' | sed 's/v//')
            
            # Validate version was updated
            if [[ "$CURRENT_VERSION" != "$EXPECTED_VERSION"* ]]; then
              echo "‚ùå Version in version.json must be updated to $EXPECTED_VERSION for milestone PR"
              exit 1
            fi
            echo "‚úÖ Version correctly updated for milestone"
          fi
          
          echo "current-version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "current-milestone=$CURRENT_MILESTONE" >> $GITHUB_OUTPUT

  auto-tag:
    runs-on: ubuntu-latest
    needs: version-check
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      
      - name: Auto-create Git Tag
        run: |
          VERSION=$(jq -r '.version' version.json)
          MILESTONE=$(jq -r '.milestone' version.json)
          PHASE=$(jq -r '.phase' version.json)
          
          # Check if tag already exists
          if git tag -l | grep -q "^v$VERSION$"; then
            echo "Tag v$VERSION already exists"
          else
            echo "Creating tag v$VERSION"
            git config user.name "GitHub Actions"
            git config user.email "actions@github.com"
            git tag -a "v$VERSION" -m "Milestone $MILESTONE: $PHASE"
            git push origin "v$VERSION"
          fi

  milestone-validation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Validate Milestone Progress
        run: |
          MILESTONE=$(jq -r '.milestone' version.json)
          STATUS=$(jq -r '.status' version.json)
          
          echo "üéØ Current Milestone: $MILESTONE"
          echo "üìä Status: $STATUS"
          
          # Check if required files exist for milestone
          case $MILESTONE in
            "1.1")
              echo "Validating WBS Foundation milestone..."
              if [[ ! -f "src/GanttComponents/Services/WbsCodeGenerationService.cs" ]]; then
                echo "‚ùå WBS Service missing for milestone 1.1"
                exit 1
              fi
              ;;
            "1.2")
              echo "Validating TimelineView milestone..."
              if [[ ! -f "src/GanttComponents/Components/TimelineView/TimelineView.razor" ]]; then
                echo "‚ùå TimelineView component missing for milestone 1.2"
                exit 1
              fi
              ;;
            "1.3")
              echo "Validating GanttComposer milestone..."
              if [[ ! -f "src/GanttComponents/Components/GanttComposer/GanttComposer.razor" ]]; then
                echo "‚ùå GanttComposer component missing for milestone 1.3"
                exit 1
              fi
              ;;
          esac
          
          echo "‚úÖ Milestone $MILESTONE validation passed"

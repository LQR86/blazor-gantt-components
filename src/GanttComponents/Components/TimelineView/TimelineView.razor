@using GanttComponents.Models
@using GanttComponents.Services
@using GanttComponents.Components.TimelineView.Renderers
@using Microsoft.JSInterop
@using Microsoft.AspNetCore.Components

<div id="timeline-@ComponentId" class="timeline-container" style="--header-month-height: @(HeaderMonthHeight)px; --header-day-height: @(HeaderDayHeight)px;">
    
    @* Fixed Header SVG - Stays at top *@
    <div class="timeline-header-container">
        <svg class="timeline-header-svg" 
             viewBox="@SVGRenderingHelpers.GetHeaderViewBox((int)TotalWidth, TotalHeaderHeight)"
             width="@TotalWidth" 
             height="@TotalHeaderHeight">
            <!-- SVG Headers Group -->
            <g class="svg-headers">
                @((MarkupString)RenderSVGHeaders())
            </g>
        </svg>
    </div>

    @* Scrollable Content SVG *@
    <div class="timeline-scroll-container">
        <svg class="timeline-body-svg" 
             viewBox="@SVGRenderingHelpers.GetBodyViewBox((int)TotalWidth, (int)TotalHeight)"
             width="@TotalWidth" 
             height="@TotalHeight">
            <!-- Timeline Body Group -->
            <g class="svg-timeline-body">
                <!-- Grid lines aligned with secondary header boundaries -->
                @foreach (var date in GetSecondaryGridLineDates())
                {
                    var x = DayToPixel(date);
                    <line x1="@x" y1="0" x2="@x" y2="@TotalHeight" 
                          class="timeline-grid-line" />
                }
                
                <!-- Task bars -->
                @if (Tasks != null)
                {
                    @for (int i = 0; i < Tasks.Count; i++)
                    {
                        var task = Tasks[i];
                        var y = i * RowHeight;
                        var x = DayToPixel(task.StartDate.ToUtcDateTime());
                        var width = CalculateTaskWidth(task);
                        var rowIndex = i;
                        
                        <!-- Task background row (no data-task-id - only for styling) -->
                        <rect x="0" y="@y" width="@TotalWidth" height="@RowHeight"
                              class="timeline-row @(SelectedTaskId == task.Id ? "selected" : "") @(HoveredTaskId == task.Id ? "hovered" : "")"
                              @onclick="() => SelectTask(task.Id)"
                              @onmouseenter="() => HoverTask(task.Id)"
                              @onmouseleave="() => HoverTask(null)" />
                        
                        <!-- Task bar -->
                        <rect x="@x" y="@(y + TaskBarMargin)" 
                              width="@width" height="@(TaskBarHeight)"
                              class="timeline-task-bar"
                              data-task-id="@task.Id"
                              @onclick="() => SelectTask(task.Id)"
                              @onmouseenter="() => HoverTask(task.Id)"
                              @onmouseleave="() => HoverTask(null)">
                            <title>@GetTaskTooltip(task)</title>
                        </rect>
                        
                        <!-- Task label (WBS Code) - TODO: Add text labels -->
                        @* <svg:text x="@(x + 4)" y="@(y + RowHeight/2 + 4)" class="timeline-task-label">@task.WbsCode</svg:text> *@
                    }
                }
            </g>
        </svg>
    </div>
</div>



<style>
    .timeline-container {
        position: relative;  /* Force consistent positioning context for tooltips */
        display: flex;
        flex-direction: column;
        height: 100%;
        border: 1px solid var(--gantt-outline, #e0e0e0);
        background: var(--gantt-surface, #ffffff);
    }

    /* Fixed Header Container */
    .timeline-header-container {
        position: sticky;
        top: 0;
        z-index: 10;
        background: var(--gantt-surface, #ffffff);
        border-bottom: 1px solid var(--gantt-outline, #e0e0e0);
        overflow-y: scroll; /* Reserve scrollbar space for alignment */
        overflow-x: auto; /* Reserve horizontal scrollbar space */
        /* Hide scrollbars while preserving space */
        scrollbar-width: none; /* Firefox */
        -ms-overflow-style: none; /* IE/Edge */
    }

    .timeline-header-container::-webkit-scrollbar {
        display: none; /* Chrome/Safari/Webkit */
    }

    .timeline-header-svg {
        display: block;
        flex-shrink: 0;
    }

    /* Scrollable Content Container */
    .timeline-scroll-container {
        flex: 1;
        overflow-y: scroll; /* Always reserve scrollbar space for alignment */
        overflow-x: auto; /* Allow horizontal scrolling when needed */
        position: relative;
    }

    .timeline-body-svg {
        display: block;
        flex-shrink: 0;
    }

    /* Legacy timeline-svg for backward compatibility */
    .timeline-svg {
        display: block;
        flex-shrink: 0;
    }

    /* === SVG HEADER STYLES === */
    .svg-headers {
        /* SVG headers group - no additional styling needed, positioning handled by SVG */
    }

    .svg-primary-cell {
        fill: var(--gantt-surface-variant, #f5f5f5);
        stroke: var(--gantt-outline, #e0e0e0);
        stroke-width: 1;
    }

    .svg-secondary-cell {
        fill: var(--gantt-surface, #ffffff);
        stroke: var(--gantt-outline, #e0e0e0);
        stroke-width: 1;
    }

    .svg-primary-text {
        fill: var(--gantt-on-surface, #000000);
        font-family: var(--gantt-monospace-font, 'Consolas', 'Monaco', 'Courier New', monospace);
        font-size: 14px;
        font-weight: 500;
        pointer-events: none;
        user-select: none;
    }

    .svg-secondary-text {
        fill: var(--gantt-on-surface, #000000);
        font-family: var(--gantt-monospace-font, 'Consolas', 'Monaco', 'Courier New', monospace);
        font-size: 12px;
        font-weight: normal;
        pointer-events: none;
        user-select: none;
    }

    .svg-header-cell-group {
        /* Container for individual header cells */
    }

    .svg-cell-selected {
        fill: var(--gantt-state-selected, rgba(25, 118, 210, 0.12)) !important;
    }

    /* === LEGACY HEADER STYLES (DEPRECATED) === */
    /* Keep for backward compatibility - may be used by external CSS or JS */
    .timeline-header {
        position: sticky;
        top: 0;
        z-index: 10;
        background: var(--gantt-surface, #ffffff);
        border-bottom: 1px solid var(--gantt-outline, #e0e0e0);
        min-width: fit-content;
    }

    /* Zoom-adaptive primary header row (quarters, years, decades) */
    .timeline-header-primary {
        display: flex;
        height: var(--header-month-height);
        border-bottom: 1px solid var(--gantt-outline, #e0e0e0);
    }

    .timeline-primary-unit {
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: 500;
        font-family: var(--gantt-monospace-font, 'Consolas', 'Monaco', 'Courier New', monospace);
        border-right: 1px solid var(--gantt-outline, #e0e0e0);
        background: var(--gantt-surface-variant, #f5f5f5);
        box-sizing: border-box;
        margin: 0;
        padding: 0;
        flex-shrink: 0;
        min-width: 0; /* Allow text overflow handling */
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }

    /* Zoom-adaptive secondary header row (months, quarters, years) */
    .timeline-header-secondary {
        display: flex;
        height: var(--header-day-height);
    }

    .timeline-secondary-unit {
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 12px;
        font-family: var(--gantt-monospace-font, 'Consolas', 'Monaco', 'Courier New', monospace);
        border-right: 1px solid var(--gantt-outline, #e0e0e0);
        background: var(--gantt-surface, #ffffff);
        box-sizing: border-box;
        margin: 0;
        padding: 0;
        flex-shrink: 0;
        min-width: 0; /* Allow text overflow handling */
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }

    /* === LEGACY HEADER CLASSES (DEPRECATED) === */
    /* Keep for backward compatibility - may be used by external CSS or JS */
    .timeline-header-months {
        display: flex;
        height: var(--header-month-height);
        border-bottom: 1px solid var(--gantt-outline, #e0e0e0);
    }

    .timeline-month {
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: 500;
        font-family: var(--gantt-monospace-font, 'Consolas', 'Monaco', 'Courier New', monospace);
        border-right: 1px solid var(--gantt-outline, #e0e0e0);
        background: var(--gantt-surface-variant, #f5f5f5);
        box-sizing: border-box;
        margin: 0;
        padding: 0;
        flex-shrink: 0;
    }

    .timeline-header-days {
        display: flex;
        height: var(--header-day-height);
    }

    .timeline-day {
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 12px;
        border-right: 1px solid var(--gantt-outline, #e0e0e0);
        background: var(--gantt-surface, #ffffff);
        box-sizing: border-box;
        margin: 0;
        padding: 0;
        flex-shrink: 0;
    }

    .timeline-body {
        position: relative;
        min-width: fit-content;
    }

    .timeline-grid-line {
        stroke: var(--gantt-outline-variant, #f0f0f0);
        stroke-width: 1;
    }

    .timeline-row {
        fill: transparent;
        cursor: pointer;
    }

    .timeline-row:hover {
        fill: var(--gantt-state-hover, rgba(25, 118, 210, 0.04));
    }

    .timeline-row.hovered {
        fill: var(--gantt-state-hovered, rgba(33, 150, 243, 0.06));
    }

    .timeline-row.selected {
        fill: var(--gantt-state-selected, rgba(25, 118, 210, 0.08));
    }

    .timeline-task-bar {
        fill: var(--gantt-primary, #1976d2);
        rx: 2;
        cursor: pointer;
    }

    .timeline-task-bar:hover {
        fill: var(--gantt-primary-dark, #1565c0);
    }

    .timeline-task-label {
        fill: var(--gantt-on-surface, #000000);
        font-size: 12px;
        font-family: var(--gantt-font-family, system-ui);
        pointer-events: none;
        user-select: none;
    }

    /* Viewport-fixed tooltips */
    .timeline-viewport-tooltip {
        position: absolute;
        top: calc(var(--header-month-height) / 2);
        transform: translateY(-50%);
        background: var(--gantt-inverse-surface, rgba(32, 33, 36, 0.9));
        color: var(--gantt-inverse-on-surface, #ffffff);
        padding: 4px 8px;
        border-radius: 4px;
        font-size: 12px;
        font-family: var(--gantt-monospace-font, 'Consolas', 'Monaco', 'Courier New', monospace);
        font-weight: 500;
        z-index: 100;
        pointer-events: none;
        white-space: nowrap;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
    }

    .timeline-viewport-tooltip-left {
        left: 8px;
    }

    .timeline-viewport-tooltip-right {
        right: 8px;
    }
</style>

name: Build and Test (Safety Net)

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
    # This workflow runs on ALL PRs - branch naming validation removed

permissions:
  contents: read
  pull-requests: write

env:
  DOTNET_VERSION: '8.0.x'

jobs:
  # Main build and test job - Windows focused
  build-and-test:
    runs-on: windows-latest  # Using Windows for Windows 7/10 compatibility
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Cache NuGet packages
      uses: actions/cache@v4
      with:
        path: ~\.nuget\packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build Debug
      run: dotnet build --configuration Debug --no-restore
    
    - name: Build Release
      run: dotnet build --configuration Release --no-restore
    
    - name: Run tests
      run: dotnet test --configuration Release --no-build --verbosity normal
    
    - name: Publish for Windows
      run: dotnet publish --configuration Release --output .\publish\windows
    
    - name: Upload Windows build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: windows-build
        path: .\publish\windows\
        retention-days: 30

  # Code quality check (basic)
  code-analysis:
    runs-on: windows-latest
    needs: build-and-test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Build for analysis
      run: dotnet build --configuration Release
    
    - name: Check code formatting
      run: dotnet format --verify-no-changes --verbosity diagnostic

  # Basic security scan (Windows compatible)
  security-scan:
    runs-on: windows-latest
    needs: build-and-test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Check for vulnerable packages
      run: |
        dotnet restore
        dotnet list package --vulnerable --include-transitive
    
    - name: Check for deprecated packages
      run: dotnet list package --deprecated

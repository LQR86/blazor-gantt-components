name: Hotfix Validation

on:
  pull_request:
    branches: [main]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.github/**'

permissions:
  contents: read
  pull-requests: write
  security-events: write

env:
  DOTNET_VERSION: '8.0.x'

jobs:
  hotfix-info:
    runs-on: ubuntu-latest
    if: contains(github.head_ref, 'hotfix')
    steps:
      - name: Hotfix Branch Info
        run: |
          echo "üö® Hotfix branch detected: ${{ github.head_ref }}"
          echo "üîç Running critical path validation"
          echo "‚úÖ Branch naming validation rules have been removed"
          echo "üéØ Focus: Security and functionality validation"

  security-scan:
    runs-on: ubuntu-latest
    needs: hotfix-info
    if: contains(github.head_ref, 'hotfix')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      
      - name: Security Vulnerability Scan
        run: |
          echo "üîí Running security vulnerability scan"
          
          # Check for known vulnerable packages
          dotnet list package --vulnerable 2>&1 | tee vulnerable-packages.log
          
          # Fail if vulnerabilities found
          if grep -q "has the following vulnerable packages" vulnerable-packages.log; then
            echo "‚ùå Vulnerable packages detected in hotfix"
            cat vulnerable-packages.log
            exit 1
          fi
          
          echo "‚úÖ No vulnerable packages detected"
      
      - name: Critical Path Tests
        run: |
          echo "üß™ Running critical path tests for hotfix"
          
          # Build the project
          dotnet build src/GanttComponents/GanttComponents.csproj --configuration Release --verbosity normal
          
          # Run tests with critical tag filter (if we add them)
          dotnet test tests/GanttComponents.Tests/GanttComponents.Tests.csproj --configuration Release --logger "console;verbosity=detailed"
          
          echo "‚úÖ Critical path tests passed"

  fast-deployment-check:
    runs-on: ubuntu-latest
    needs: [hotfix-info, security-scan]
    if: contains(github.head_ref, 'hotfix')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      
      - name: Validate Fast Deployment Readiness
        run: |
          echo "‚ö° Validating hotfix is ready for fast deployment"
          
          # Ensure build is optimized for production
          dotnet build src/GanttComponents/GanttComponents.csproj --configuration Release --no-restore
          
          # Check assembly info
          if [ -f "src/GanttComponents/bin/Release/net8.0/GanttComponents.dll" ]; then
            echo "‚úÖ Release build successful"
          else
            echo "‚ùå Release build failed"
            exit 1
          fi
          
          # Validate package references are stable
          echo "üì¶ Checking package stability"
          grep -r "IncludePrerelease" **/*.csproj && {
            echo "‚ùå Hotfix should not include prerelease packages"
            exit 1
          } || echo "‚úÖ No prerelease packages detected"
          
          echo "‚úÖ Hotfix ready for fast deployment"
